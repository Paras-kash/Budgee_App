# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # XCConfig modification to fix DT_TOOLCHAIN_DIR issue
  installer.generated_projects.each do |project|
    project.targets.each do |target|
      target.build_configurations.each do |config|
        # Ensure C++17 standard is properly set for all targets
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
      end
    end
  end

  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # Set deployment target for all pods
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # Add '-Wno-error=shorten-64-to-32' to pods with warnings about 64-bit to 32-bit conversion
      config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-error=shorten-64-to-32 -Wno-comma -Wno-unreachable-code -Wno-shadow'
      
      # Special handling for gRPC-Core
      if target.name == 'gRPC-Core'
        # Fix the template parsing issues by using more permissive flags
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_ALLOW_EXCEPTIONS=1'
        config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
        
        # Use permissive mode for gRPC-Core
        if config.build_settings['OTHER_CPLUSPLUSFLAGS']
          config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -std=c++17 -fpermissive -Wno-everything'
        else
          config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-std=c++17 -fpermissive -Wno-everything'
        end
      end
      
      # Special handling for BoringSSL-GRPC
      if target.name == 'BoringSSL-GRPC'
        if config.build_settings['OTHER_CPLUSPLUSFLAGS']
          config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -std=c++17 -Wno-everything'
        else
          config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-std=c++17 -Wno-everything'
        end
      end
    end
    
    flutter_additional_ios_build_settings(target)
  end
end