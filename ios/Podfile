# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # Ensure minimum iOS deployment target
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      
      # Remove problematic flags - more comprehensive approach
      ['COMPILER_FLAGS', 'OTHER_CFLAGS', 'OTHER_CPLUSPLUSFLAGS'].each do |flag_name|
        if config.build_settings[flag_name].present?
          # Remove single -G flags (surrounded by spaces or at the beginning/end of string)
          config.build_settings[flag_name] = config.build_settings[flag_name].gsub(/ -G |^-G | -G$/, ' ').squeeze(' ')
          # Remove any remaining -G flags that might be concatenated with other flags
          config.build_settings[flag_name] = config.build_settings[flag_name].gsub(/-G/, '')
        end
      end
      
      # Fix for Apple Silicon Macs with M1/M2 chips
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'i386'
      
      # Try to read and modify xcconfig if it exists and is readable
      if config.base_configuration_reference && 
         File.exist?(config.base_configuration_reference.real_path) && 
         File.readable?(config.base_configuration_reference.real_path)
        begin
          xcconfig_path = config.base_configuration_reference.real_path
          xcconfig = File.read(xcconfig_path)
          xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
          File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
        rescue => e
          # Just log the error and continue if there's an issue with file operations
          puts "Warning: Failed to modify xcconfig file: #{e.message}"
        end
      end
    end
  end
end
